1.用解构赋值的方式将 PageIndex,PageSize,id,category,subject,format,changed解构出来
let obj = {
  "paramz": {
    "feeds": 
      [{
        "id": 299076,
        "category": "article",
        "data": {
          "subject": "荔枝新闻3.0：不止是阅读",
          "format": "txt",
          "changed": "2015-09-22 16:01:41"
        }
      }],
    "PageIndex": 1,
    "PageSize": 20
  }
}

const {
paramz: {
    "eeds: 
      [{
        id,
        category: article,
        data: {
          subject,
          format ,
          changed,
        }
      }],
    PageIndex,
    PageSize,
  }	
} = obj 
2.
//获取用户
function getUser(id) {
    return Promise.resolve(id + 1);
}

//根据用户获取角色
function getRoleByUser(id) {
    return Promise.resolve(id + 1);
}

//根据角色获取权限
function getRightsByRole(id) {
    return Promise.resolve(id + 1);
}

async  function ab() {
    //先获取用户
    getUser().then(userId => {
        //根据用户ID获取角色
        getRoleByUser(c).then(roleid => {
            //根据角色ID获取权限
            getRightsByRole(d).then(rights => {
            },roleId);
        },userId);
    });
//改为同步的方式执行

var  userId = await getUser() ; 
var roleid = await getRoleByUser(userId)
var rights = await getRightsByRole(roleId)
}


3.
function Number(length) {
    this.length = length;
}

Numbe.prototype.push = function(arr) {

}

Numbe.prototype.pop = function() {

}

Numbe.isNumber = function(arr) {

}

//转换为class的方式
class Array{
 constructor(length){
  this.length = length
}

push(arr){}

pop(){}

static isArray(arr){}




}

5.阅读本篇文章https://segmentfault.com/a/1190000007535316，写出看懂和没看懂的地方。
  async和await是用来做异步的 ,例:如调用接口是可以让同步调用的接口像异步调用的接口一样
aysnc函数返回的是一个Promise对象
Promise对象的特点是无等待,所以在await的情况下执行async函数,他会立即执行
await可以用来等待一个async函数的返回值,
await不仅仅用来等待Promise对象,他可以等待任意表达式的结果
await表达式的运算结果取决于他等的东西
如果他等到的不是一个Promise对象,那await表达式的运算结果就是他等到的东西
如果是一个Promise对象,他会阻塞后面的代码,
await必须用在async函数中
async函数调用不会造成阻塞

6.阅读本篇文章https://github.com/mqyqingfeng/Blog/issues/3	 写出看懂和没看懂的地方。
作用域 一段代码执行的范围 
静态作用域 与 动态作用域
静态作用域就是查找变量时当前函数中没有找到,就会向上查找
js采用的就是静态作用域
动态作用域就是向下执行
7.阅读本篇文章https://learnku.com/articles/50523，写出看懂和没看懂的地方。
js的词法作用域和this
静态作用域又叫词法作用域 里面的变量叫做词法变量
js采用的就是词法作用域,变量会一直存在
函数内部this 在定义的时候强行绑定了执行他的环境 window
箭头函数谁调用就指向谁

