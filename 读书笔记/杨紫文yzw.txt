JScript



1.JavaScript是一门用来与网页交互的脚本语言,它由三部分组成，分别是：
a:ECMAScript,b:文档对象模型（DOM）c:浏览器对象模型（BOM）


2.使用script的方式：嵌入行内样式，直接在script中写入。	
注：代码中不能出现字符串，否则就会报错。
浏览器解析行内脚本时看到script会把它当成结束标签，需要转义字符”\“，这样代码就会被完全解析不会出错。

标签占位符

在过去所有的script元素都放在head标签内，这样回导致页面渲染延迟，因为把所有JavaScript文件都放在 <head> 里，也就意味着必须把所有的JavaScript代码都下载、解析和解释完成后，才能开始渲染页面。


行内代码与外部文件

推荐使用外部文件
原因：1可维护性，如果代码存放在多个html页面中，维护起来会很麻烦，如果把他都保存在一个JavaScript文件中，维护起来就方便多了‘
2：缓存  让页面加载更快
3.适应未来



语法


区分大小写

例：test和Test时两个不同的变量。typeof不能作为函数名，但是Typeof可以时有效的函数名

标识符
变量、函数、属性或函数参数的名称。字母下划线美元符号$


关键字和保留字

关键字不能作为标识符或者属性名字。比如：bread,case,do,new,return,class等。。。

保留字
留给将来做关键字用的。


变量

变量时松散型的，变量可以保存任何类型的数据，var const let 可以声明变量。但是var 可以在任何版本中使用，const和let只能在ECMAScript 6或者更晚的版本中使用。

var 声明作用域
 var 操作符定义的变量会成为包含它的函数的局部变量

var声明提升
声明的变量会自动提升到函数作用域顶部

let声明
let 和var的区别
let 声明的时跨级作用域，var声名的时函数作用域

let声明的变量不会在作用域中被提升。在let声明之前执行被称为暂时性死区

let 在全绝作用域中声明的变量不会成为window对象的属性。

cons声明：const的行为与let基本相同，它声明变量时必须同时初始化变量。const 声明的限制只适用于它指向的变量的引用


数据类型：
Undefined 、 Null 、 Boolean 、 Number 、 String,Symbol

typeof 操作符
 typeof 操作符会返回下列字符串之一：
"undefined" 未定义；用 var 或 let 声明了变量但没有初始化
"boolean" 布尔类型；有两个字面值： true 和 false
"string" 字符串；  可以使用双引号，单引号，反引号标示
"number"数值；
"object" 对象；创建自己的对象，然后再给对象添加属性和方法
"symbol" 符号。函数不能用作构造函数，与new关键字一起使用

NAN，本来要返回数值的操作失败了

数值转换
非数值转换为数值： Number() 、parseInt() 和 parseFloat()

转换为字符串： toString() String()

操作符

加法操作符 ：+
减法操作符：-
ECMAScript 7新增了指数操作符：**
乘法操作符：*
除法操作符：/
取模（余数）操作符：%
关系操作符：小于（ < ）、大于（>）、小于等于（ <= ）和大于等于（ >= ）
++ -- |+=  -= ><  >= <=   （相等）==  （全等）===  (赋值)=  !=

布尔操作符
 逻辑非！
逻辑与&&
逻辑或||

语句
if 语句:
条件condition可以是任何表达式，并且求值结果 不一定是布尔值。ECMAScript会自动调用 Boolean() 函数将这个表 达式的值转换为布尔值。如果条件求值为 true ，则执行语句 statement1 ；如果条件求值为 false ，则执行语句 statement2 。这里的语句可能是一行代码，也可能是一个代码块 。
1.do-while 语句:
do-while 语句是一种后测试循环语句，即循环体中的代码执 行后才会对退出条件进行求值。
2.while 语句:
while 语句是一种先测试循环语句，即先检测退出条件，再执 行循环体内的代码。
3.for 语句:
for 语句也是先测试语句，只不过增加了进入循环之前的初始 化代码，以及循环执行后要执行的表达式，
for-in 语句:
for-in 语句是一种严格的迭代语句，用于枚举对象中的非符号 键属性，
for-of 语句:
for-of 语句是一种严格的迭代语句，用于遍历可迭代对象的元 素，
4.with 语句:
with 语句的用途是将代码作用域设置为特定的对象
5.switch 语句:
switch 语句是与 if 语句紧密相关的一种流控制语句，从其他 语言借鉴而来。
函数
函数是核心组件，它封装语句，在任何地方任何时间执行。
严格模式对函数也有一些限制：
1.函数不能以 eval 或 arguments 作为名称；
2.函数的参数不能叫 eval 或 arguments ；
3.两个函数的参数不能叫同一个名称





