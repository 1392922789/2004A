<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>

<body>
    <script>
        // 1.用解构赋值的方式将 PageIndex, PageSize, id, category, subject, format, changed结构出来
        {
            "paramz": {
                "feeds":
                {
                    "id": 299076,
                        "category": "article",
                            "data": {
                        "subject": "荔枝新闻3.0：不止是阅读",
                            "format": "txt",
                                "changed": "2015-09-22 16:01:41"
                    }
                },
                "PageIndex": 1,
                    "PageSize": 20
            }
        }
        const { paramz: { PageIndex, PageSize }, feeds: { category }, data: { id, subject, format, changed } } = d1;
        2.
        //获取用户
        function getUser(id) {
            return Promise.resolve(id + 1);
        }

        //根据用户获取角色
        function getRoleByUser(id) {
            return Promise.resolve(id + 1);
        }

        //根据角色获取权限
        function getRightsByRole(id) {
            return Promise.resolve(id + 1);
        }

        async function ab() {
            //先获取用户
            getUser(1).then(c => {
                //根据用户ID获取角色
                getRoleByUser(c).then(d => {
                    //根据角色ID获取权限
                    getRightsByRole(d).then(c => {
                    });
                });
            });
        }
        //改为同步的方式执行
        async function ab() {
            //先获取用户
            await getUser(1).then(c => {
                //根据用户ID获取角色
                await getRoleByUser(c).then(d => {
                    //根据角色ID获取权限
                    await getRightsByRole(d).then(c => {
                    });
                });
            });
        }
        3.
        function Array(length) {
            this.length = length;
        }

        Array.prototype.push = function (arr) {

        }

        Array.prototype.pop = function () {

        }；

        Array.isArray = function (arr) {

        }

        //转换为class的方式
        class Array {
constructor(length) {
this.length = length;
}
push(arr) { }
pop() { }
static isArray(arr) { }
}

        4.来这里的学习的目的是什么？学习要达成？要达成目标的规划？   
        拿到自己所期望的薪资，   认真听课 勤问老师和同学
    </script>
</body>

</html>