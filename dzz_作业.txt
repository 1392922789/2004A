一、原型与原型链的理解：
原型与原型链是学习javascript这门语言不能不理解的两个重要概念，那这是为什么呢？因为javascript是一门基于原型的语言
原型：
原型是一个可以被复制或者叫克隆的一个类，我们通过复制原型可以创建一个一模一样的新对象，简单点来说原型就是一个模板
1.每个函数都有一个prototype属性，被称为显示原型
2.每个实例对象都会有__ptoto__属性，被称为隐式原型
3.每一个实例对象的隐式原型__proto__属性指向自身构造函数的显示原型prototype
4.每一个prototype原型都有一个constructor属性，指向它关联的构造函数
var Person = function(name){
    this.name = name;
}         
Person.prototype.say = function(){
    console.log("Hello! I am " + this.name );
}       
var jack= new Person("jack");
var ding = new Person("ding");         
jack.say();    //Hello! I am jack
ding.say();  //Hello! I am ding
从上面的代码来看：原型(Person)定义了公用的属性和方法；利用原型创建出来的新对象实例会共享原型的所有属性和方法
原型链：
在javascript中，所有的对象都拥有一个__proto__属性指向该对象的原型prototype,在获取对象属性时，如果对象本身没有这个属性，那就会去他的原型__proto__上去找，直到找到给定名称的属性为止。直到到达原型链的顶部仍然没有找到指定的属性，就会返回 undefined。
function person() {
    this.name = ""
    this.age = ""
    this.sex = ""
}
function chinese(){
    person.call(this)
}
chinese.prototype=Object.assign(Object.create(person.prototype),{
    skin:'',
    hair:''
})
打印出：person{skin:"",hair:""}

2，
function y(num) {
    console.log(num);//2
    var num = 1;
    console.log(num);//1
    console.log(fn); // log 2
    var fn = function() {
       console.log(1);
   }
   console.log(fn); //log 1
   function fn(){
       console.log(2);
   }
   console.log(fn); //log 1
}
y(2);

3.function y() {
    console.log(num);  //打印function num() { console.log(5); }
    var num = 1;
    console.log(num); //1
    function num() { console.log(3); }
    function num() { console.log(5); }
    console.log(num); //1
}
y();

4.function y() {    
    var num = 1;
    console.log(num); //1
    function num() { console.log(3); }
    console.log(num); //1
}
y();

5.for(var i = 0;i<10;i++){ 
	setTimeout(()=>{ console.log(i); },100);
 }
打印 10遍10

6.三种打印出0-9的方法
(1)for(let i = 0;i<10;i++){ 
      setTimeout(()=>{ console.log(i); },100);
 }
(2) 
var i = 0;
  var timer = setInterval(() => {
    i++
    if (i > 8) {
      clearInterval(timer)
    }
    console.log(i);
  }, 100);
(3) 递归：
 var i = 0
   add()
  function add() {
    console.log(i)
    if (i < 9) {
      i++
      add()
    }
  }

7.密码必须为6-15位的数字、字母、_-的组合。请使用正则表达式验证
/^[0-9a-zA-Z_]{6,15}$/

/^[0-9a-zA-Z_]{6,15}$/.test('2234asd_')
true

8.原型链
7.//注意审题 
  function A() {} 
  function B() {} 
  B.prototype = Object.create(A.prototype); 
  B.prototype.constructor = B; 
  function C() {} 
  C.prototype = Object.create(B.prototype); 
  C.prototype.constructor = C; 
  
   var c1 = new C(); 
  c1.prototype === C.__proto__.prototype
  c1.__proto__ === C.prototype 
  c1.__proto__.prototype === c1.prototype
  c1.__proto__.__proto__ === B.prototype
  c1.__proto__.__proto__.__proto__ === A.prototype
  c1.__proto__.constructor === C
  c1.__proto__.constructor.prototype === C.prototype 
  c1.__proto__.constructor.prototype.constructor === C 
  C.prototype.constructor === C 
  C.prototype.constructor.prototype === C.prototype 
  C.prototype.constructor.prototype.constructor === C
  C.prototype.__proto__ === B.prototype 
