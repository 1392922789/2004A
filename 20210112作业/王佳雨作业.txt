1.写一个链式调用的Promise
const p = new Promise((resolve, reject) => {
    setTimeout(() => {
        resolve(333);
    }, 1000)
});
p.then(res => {.
    console.log(res);
    return new Promise((resolve, reject) => {
        setTimeout(() => {
            resolve('444=====');
        }, 3000);
    })
}).then(res => {
    console.log(res)
})

2.使用async await写一个案例
const getData = () => new Promise(resolve => setTimeout(() => resolve("data"), 1000))
 
async function test() {
  const data = await getData()
  console.log('data: ', data);
  const data2 = await getData()
  console.log('data2: ', data2);
  return 'success'
}

// 1秒后打印data 再过一秒打印data2 最后打印success
test().then(res => console.log(res))
3.==和===的区别
== 判断值的类型是否相同
=== 判断值和类型是否相同

4.var name='';let name = '';会发生什么事？
name报错

5.const obj = {a:1};var b = 1; obj.a = 2;b = 2; 会发生什么事？
obj报错

6.var age = 12;
var obj = {
  age: 13,
  tellMe() {
    console.log('我今年' + this.age);
  }
}
var obj1 = {
  age: 15,
  tellMe: () => {
    console.log('我今年' + this.age);
  }
}
obj.tellMe();
obj1.tellMe();
var tell = obj.tellMe;
tell();
tell = obj1.tellMe;
tell();

写出运行结果和为什么？
obj报错

7.function person() {
  this.name = '张三';
}
person.prototype.name = '李四';
var p = new person();
console.log(p.name);
delete p.name;
console.log(p.name);
写出打印结果
张三 李四

8.function human(name, age) {
  this.name = name;
  this.age = age;
}
human.prototype.eat = function () {
  console.log(`我叫${this.namee}，会吃饭了`);
}
human.prototype.tell = function () {
  console.log(`我叫${this.namee}，今年${this.age}岁`);
}
human.isHuman = function (obj) {
  if (obj instanceof human) {
    console.log('这是一个human的实例');
  } else {
    console.log('这不是一个human的实例');
  }
}
//请使用class定义一个功能一样的human对象

function women(name, age) {
  this.name = name;
  this.age = age;
}
women.prototype.eat = function () {
  console.log(`我叫${this.name1}，会吃了`);
}
women.prototype.tell = function () {
  console.log(`我叫${this.name1}，今年${this.age}岁`);
}
women.isWomen = function (obj) {
  if (obj instanceof women) {
    console.log('这是一个women的实例');
  } else {
    console.log('这不是一个women的实例');
  }
}